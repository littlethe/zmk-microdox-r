/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT   0
#define num_layer 1
#define nav_layer 2
#define sys_layer 3
#define bt_layer  4
#define sym_layer 5

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &mt LALT SEMI &kp Y   &kp U     &kp L          &kp J       &kp J       &kp L         &kp U         &kp Y    &kp SEMI
   &kp O         &kp I   &kp E     &kp N          &kp M       &kp M       &kp N         &kp E         &kp I    &kp O
   &mt LGUI FSLH &kp DOT &kp COMMA &kp H          &kp K       &kp K       &kp H         &kp COMMA     &kp DOT  &kp FSLH
                         &kp SPACE &mo nav_layer  &kp LSHFT   &kp LSHFT   &mo nav_layer &kp SPACE
                        >;
                };
                num_layer {
                        bindings = <
   &kp ESC &kp N4 &kp N5        &kp N6 &kp EQUAL      &kp GRAVE &kp PLUS         &kp MINUS &kp STAR &kp SLASH
   &kp N0  &kp N1 &kp N2        &kp N3 &kp MINUS      &kp LBKT  &kp LPAR         &kp SQT   &kp RPAR &kp RBKT
   &kp TAB &kp N7 &kp N8        &kp N9 &kp DOT        &trans    &kp BSLH         &trans    &trans   &trans
                  &mo bt_layer  &trans &mo sym_layer  &trans    &mo sys_layer    &trans
                        >;
                };

                nav_layer {
                        bindings = <
   &kp ESC &kp PG_UP &kp UP         &kp DEL  &kp HOME        &kp HOME      &kp DEL  &kp UP   &kp PG_UP &kp PSCRN
   &kp RSHFT &kp RIGHT &kp DOWN       &kp LEFT &kp END         &kp END       &kp LEFT &kp DOWN &kp RIGHT &kp RSHFT
   &kp INS   &kp PG_DN &kp RET        &kp RBKT &kp RPAR        &kp RPAR      &kp RBKT &kp RET  &kp PG_DN &kp INS
                       &mo bt_layer   &trans   &mo sys_layer   &mo sys_layer &trans   &mo bt_layer
                        >;
                };

                sys_layer {
                        bindings = <
   &kp CAPS &kp F4 &kp F5 &kp F6 &kp PSCRN   &kp PSCRN &kp F6 &kp F5 &kp F4 &kp CAPS
   &kp F10  &kp F1 &kp F2 &kp F3 &kp F11     &kp F11   &kp F3 &kp F2 &kp F1 &kp F10
   &trans   &kp F7 &kp F8 &kp F9 &kp F12     &kp F12   &kp F9 &kp F8 &kp F7 &trans
                   &trans &trans &trans      &trans    &trans &trans
                        >;
                };
                bt_layer {
                        bindings = <
   &bt BT_CLR   &bt BT_SEL 4    &bt BT_SEL 5 &bt BT_SEL 6 &bt BT_PRV     &bt BT_PRV  &bt BT_SEL 6 &bt BT_SEL 5 &bt BT_SEL 4    &bt BT_CLR
   &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_NXT     &bt BT_NXT  &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1    &bt BT_SEL 0
   &kp LNLCK    &kp PAUSE_BREAK &kp SLCK     &kp PSCRN    &kp CAPS       &kp CAPS    &kp PSCRN    &kp SLCK     &kp PAUSE_BREAK &kp LNLCK
                                &trans       &trans       &trans         &trans      &trans       &trans
                        >;
                };
                sym_layer {
                        bindings = <
   &kp GRAVE &kp PLUS &kp MINUS &kp STAR &kp SLASH   &kp GRAVE &kp PLUS  &kp MINUS &kp STAR &kp SLASH
   &kp LBKT  &kp LPAR &kp SQT   &kp RPAR &kp RBKT    &kp LBKT  &kp LPAR  &kp SQT   &kp RPAR &kp RBKT
   &trans    &trans   &kp PSCRN &kp BSLH &trans      &trans    &kp BSLH  &kp PSCRN &trans   &trans
                      &trans    &trans   &trans      &trans    &trans    &trans
                        >;
                };
        };
};
